/**
 * Service for handling project analytics and metrics
 */
import { EventEmitterService } from './EventEmitterService.js';
import { analyticsConfig } from '../config/analytics-config.js';

export class ProjectAnalyticsService extends EventEmitterService {
  constructor() {
    super();
    this.metrics = new Map();
    this.metricsHistory = [];
    this.storageLimit = analyticsConfig.metrics.storageLimit;

  /**
   * Record a new metric
   * @param {string} key - Metric identifier
   * @param {number} value - Metric value
   */
  recordMetric(key, value) {
    this.metrics.set(key, value);
  }

  /**
   * Get recorded metric
   * @param {string} key - Metric identifier
   * @returns {number|null} The metric value or null if not found
   */
  getMetric(key) {
    return this.metrics.get(key) ?? null;
  }

  /**
   * Clear all metrics
   */
  clearMetrics() {
    this.metrics.clear();
  }
}
